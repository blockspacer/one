load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_proto_library", "cc_test")
load(
    "//bazel/copts:configure.bzl",
    "ONE_DEFAULT_COPTS",
    "ONE_DEFAULT_LINKOPTS",
)

cc_binary(
    name = "pb_to_arrow",
    srcs = [
        "main.cc",
    ],
    copts = ONE_DEFAULT_COPTS,
    data = ["messages.proto"],
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":converter",
        ":status_util",
        "//gtl:macros",
        "//gtl:map_util",
        "//gtl:posix_file_system",
        "//parquet",
        "@bazel_tools//tools/cpp/runfiles",
        "@com_github_gflags_gflags//:gflags",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "converter",
    srcs = [
        "converter.cc",
        "converter.h",
    ],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        ":status_util",
        "//arrow",
        "//gtl:macros",
        "//gtl:map_util",
        "//gtl:no_destructor",
        "//parquet",
        "//util:casts",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "status_util",
    srcs = ["status_util.cc"],
    hdrs = ["status_util.h"],
    copts = ONE_DEFAULT_COPTS,
    linkopts = ONE_DEFAULT_LINKOPTS,
    deps = [
        "//arrow",
        "//status:status_or",
        "//status:status_util",
    ],
)

cc_test(
    name = "converter_test",
    srcs = ["converter_test.cc"],
    deps = [
        ":converter",
        ":messages_cc_proto",
        ":status_util",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
    ],
)

proto_library(
    name = "messages_proto",
    srcs = ["messages.proto"],
)

cc_proto_library(
    name = "messages_cc_proto",
    deps = ["messages_proto"],
)
