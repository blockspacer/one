load("@rules_cc//cc:defs.bzl", "cc_library")
load(
    "//bazel/copts:configure.bzl",
    "ONE_DEFAULT_COPTS",
    "ONE_DEFAULT_LINKOPTS",
)

cc_library(
    name = "arrow",
    srcs = [
        "array/array_base.cc",
        "array/array_binary.cc",
        "array/array_decimal.cc",
        "array/array_dict.cc",
        "array/array_nested.cc",
        "array/array_primitive.cc",
        "array/builder_adaptive.cc",
        "array/builder_base.cc",
        "array/builder_binary.cc",
        "array/builder_decimal.cc",
        "array/builder_dict.cc",
        "array/builder_nested.cc",
        "array/builder_primitive.cc",
        "array/builder_union.cc",
        "array/concatenate.cc",
        "array/data.cc",
        "array/diff.cc",
        "array/util.cc",
        "array/validate.cc",
        "builder.cc",
        "buffer.cc",
        "chunked_array.cc",
        "compare.cc",
        "config.cc",
        "datum.cc",
        "device.cc",
        "extension_type.cc",
        "memory_pool.cc",
        "pretty_print.cc",
        "record_batch.cc",
        "result.cc",
        "scalar.cc",
        "sparse_tensor.cc",
        "status.cc",
        "table.cc",
        "table_builder.cc",
        "tensor.cc",
        "tensor/coo_converter.cc",
        "tensor/csf_converter.cc",
        "tensor/csx_converter.cc",
        "type.cc",
        "visitor.cc",
        "c/bridge.cc",
        "io/buffered.cc",
        "io/caching.cc",
        "io/compressed.cc",
        "io/file.cc",
        "io/hdfs.cc",
        "io/hdfs_internal.cc",
        "io/interfaces.cc",
        "io/memory.cc",
        "io/slow.cc",
        "io/transform.cc",
        "util/basic_decimal.cc",
        "util/bit_block_counter.cc",
        "util/bit_run_reader.cc",
        "util/bit_util.cc",
        "util/bitmap.cc",
        "util/bitmap_builders.cc",
        "util/bitmap_ops.cc",
        "util/compression.cc",
        "util/cpu_info.cc",
        "util/decimal.cc",
        "util/delimiting.cc",
        "util/formatting.cc",
        "util/future.cc",
        "util/int_util.cc",
        "util/io_util.cc",
        "util/iterator.cc",
        "util/logging.cc",
        "util/key_value_metadata.cc",
        "util/memory.cc",
        "util/mutex.cc",
        "util/string.cc",
        "util/string_builder.cc",
        "util/task_group.cc",
        "util/thread_pool.cc",
        "util/time.cc",
        "util/trie.cc",
        "util/uri.cc",
        "util/utf8.cc",
        "util/value_parsing.cc",
        "vendored/base64.cpp",
        "vendored/datetime/tz.cpp",
        "vendored/double-conversion/bignum.cc",
        "vendored/double-conversion/double-conversion.cc",
        "vendored/double-conversion/bignum-dtoa.cc",
        "vendored/double-conversion/fast-dtoa.cc",
        "vendored/double-conversion/cached-powers.cc",
        "vendored/double-conversion/fixed-dtoa.cc",
        "vendored/double-conversion/diy-fp.cc",
        "vendored/double-conversion/strtod.cc",
        "vendored/musl/strptime.c",
    ] + [
        "util/compression_lz4.cc",
    ] + [
        "util/compression_snappy.cc",
    ] + [
        "util/compression_zlib.cc",
    ] + [
        "compute/api_aggregate.cc",
        "compute/api_scalar.cc",
        "compute/api_vector.cc",
        "compute/cast.cc",
        "compute/exec.cc",
        "compute/function.cc",
        "compute/kernel.cc",
        "compute/registry.cc",
        "compute/kernels/aggregate_basic.cc",
        "compute/kernels/codegen_internal.cc",
        "compute/kernels/scalar_arithmetic.cc",
        "compute/kernels/scalar_boolean.cc",
        "compute/kernels/scalar_cast_boolean.cc",
        "compute/kernels/scalar_cast_internal.cc",
        "compute/kernels/scalar_cast_nested.cc",
        "compute/kernels/scalar_cast_numeric.cc",
        "compute/kernels/scalar_cast_string.cc",
        "compute/kernels/scalar_cast_temporal.cc",
        "compute/kernels/scalar_compare.cc",
        "compute/kernels/scalar_nested.cc",
        "compute/kernels/scalar_set_lookup.cc",
        "compute/kernels/scalar_string.cc",
        "compute/kernels/scalar_validity.cc",
        "compute/kernels/scalar_fill_null.cc",
        "compute/kernels/util_internal.cc",
        "compute/kernels/vector_hash.cc",
        "compute/kernels/vector_nested.cc",
        "compute/kernels/vector_selection.cc",
        "compute/kernels/vector_sort.cc",
    ] + [
        "ipc/dictionary.cc",
        "ipc/feather.cc",
        "ipc/message.cc",
        "ipc/metadata_internal.cc",
        "ipc/options.cc",
        "ipc/reader.cc",
        "ipc/writer.cc",
    ] + [
        "filesystem/filesystem.cc",
        "filesystem/localfs.cc",
        "filesystem/mockfs.cc",
        "filesystem/path_forest.cc",
        "filesystem/path_util.cc",
        "filesystem/util_internal.cc",
        "filesystem/hdfs.cc",
    ] + glob([
        "**/*.h",
    ]) + glob(["**/*.hpp"]),
    copts = ONE_DEFAULT_COPTS,
    defines = [
        "URI_STATIC_BUILD",
        "ARROW_USE_GLOG",
        "ARROW_HDFS",
        "ARROW_HAVE_SSE4_2",
        "ARROW_WITH_LZ4",
        "ARROW_WITH_SNAPPY",
        "ARROW_WITH_ZLIB",
        "HAS_STRING_VIEW=0",
        "HAS_VOID_T=0",
        "HAS_DEDUCTION_GUIDES=0",
    ],
    includes = ["."],
    linkopts = ONE_DEFAULT_LINKOPTS + [
        "-ldl",
    ],
    textual_hdrs = ["vendored/xxhash/xxhash.c"],
    visibility = ["//visibility:public"],
    deps = [
        ":uri",
        "//third_party/hadoop:hdfs",
        "@com_github_google_flatbuffers//:runtime_cc",
        "@com_github_google_glog//:glog",
        "@com_github_google_snappy//:snappy",
        "@com_github_lz4_lz4//:lz4",
        "@com_github_madler_zlib//:zlib",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "uri",
    srcs = [
        "vendored/uriparser/UriCommon.c",
        "vendored/uriparser/UriCompare.c",
        "vendored/uriparser/UriEscape.c",
        "vendored/uriparser/UriFile.c",
        "vendored/uriparser/UriIp4.c",
        "vendored/uriparser/UriIp4Base.c",
        "vendored/uriparser/UriMemory.c",
        "vendored/uriparser/UriNormalize.c",
        "vendored/uriparser/UriNormalizeBase.c",
        "vendored/uriparser/UriParse.c",
        "vendored/uriparser/UriParseBase.c",
        "vendored/uriparser/UriQuery.c",
        "vendored/uriparser/UriRecompose.c",
        "vendored/uriparser/UriResolve.c",
        "vendored/uriparser/UriShorten.c",
    ],
    hdrs = glob(["vendored/uriparser/*.h"]),
    copts = ONE_DEFAULT_COPTS,
    defines = [
        "URI_STATIC_BUILD",
    ],
    linkopts = ONE_DEFAULT_LINKOPTS,
)
