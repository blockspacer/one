diff --git a/arrow/io/hdfs_internal.h b/arrow/io/hdfs_internal.h
index 6249382..3410bfb 100644
--- a/arrow/io/hdfs_internal.h
+++ b/arrow/io/hdfs_internal.h
@@ -20,7 +20,7 @@
 #include <cstddef>
 #include <cstdint>
 
-#include <hdfs.h>
+#include "third_party/hadoop/hdfs.h"
 
 #include "arrow/util/visibility.h"
 #include "arrow/util/windows_compatibility.h"  // IWYU pragma: keep
diff --git a/arrow/result.h b/arrow/result.h
index 96863ec..e6f611c 100644
--- a/arrow/result.h
+++ b/arrow/result.h
@@ -30,7 +30,7 @@ namespace arrow {
 
 namespace internal {
 
-#if __cplusplus >= 201703L
+#if false
 using std::launder;
 #else
 template <class T>
diff --git a/arrow/util/optional.h b/arrow/util/optional.h
index e1c32e7..f4a86fc 100644
--- a/arrow/util/optional.h
+++ b/arrow/util/optional.h
@@ -19,17 +19,17 @@
 
 #define optional_CONFIG_SELECT_OPTIONAL optional_OPTIONAL_NONSTD
 
-#include "arrow/vendored/optional.hpp"  // IWYU pragma: export
+#include "absl/types/optional.h"  // IWYU pragma: export
 
 namespace arrow {
 namespace util {
 
 template <typename T>
-using optional = nonstd::optional<T>;
+using optional = absl::optional<T>;
 
-using nonstd::bad_optional_access;
-using nonstd::make_optional;
-using nonstd::nullopt;
+using absl::bad_optional_access;
+using absl::make_optional;
+using absl::nullopt;
 
 }  // namespace util
 }  // namespace arrow
