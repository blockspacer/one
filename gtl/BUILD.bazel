load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

cc_library(
    name = "compiler_specific",
    hdrs = ["compiler_specific.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//config",
    ],
)

# cc_library(
#     name = "file_system",
#     srcs = ["file_system.cc"],
#     hdrs = [
#         "file_statistics.h",
#         "file_system.h",
#     ],
#     deps = [
#         ":scanner",
#         "//config",
#         "@com_github_google_glog//:glog",
#         "@com_google_absl//absl/status",
#         "@com_google_absl//absl/strings",
#         "@com_googlesource_code_re2//:re2",
#     ],
# )

cc_library(
    name = "iterator_range",
    hdrs = ["iterator_range.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "iterator_range_test",
    srcs = [
        "iterator_range_test.cc",
    ],
    deps = [
        ":iterator_range",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "map_util",
    hdrs = [
        "map_traits.h",
        "map_util.h",
    ],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "map_util_test",
    srcs = [
        "map_util_test.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":map_util",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "priority_queue_util",
    hdrs = ["priority_queue_util.h"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "scanner",
    srcs = ["scanner.cc"],
    hdrs = ["scanner.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "scanner_test",
    srcs = ["scanner_test.cc"],
    deps = [
        ":scanner",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "top_n",
    hdrs = ["top_n.h"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_google_glog//:glog",
    ],
)

cc_test(
    name = "top_n_test",
    srcs = [
        "top_n_test.cc",
    ],
    deps = [
        ":top_n",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/random",
        "@com_google_googletest//:gtest_main",
    ],
)
